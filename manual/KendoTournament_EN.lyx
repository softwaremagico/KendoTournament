#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Índice
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
KENDO TOURNAMENT MANAGER
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename ../images/defaults/mainPhoto.png
	lyxscale 60
	width 80col%

\end_inset


\begin_inset Newline newline
\end_inset

v1.1.0
\end_layout

\begin_layout Author
Xavi Martínez, Jorge Hortelano
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter*
\begin_inset Index idx
status open

\begin_layout Plain Layout
What's new
\end_layout

\end_inset

What's new
\end_layout

\begin_layout Section*
v1.1.0
\end_layout

\begin_layout Description
Roles
\begin_inset space ~
\end_inset

Importation: a new option allows the user to copy all roles from another
 championship, avoiding the task of defining all ot them one by one.
 More info in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "Import-roles"

\end_inset

.
\end_layout

\begin_layout Description
Personalized
\begin_inset space ~
\end_inset

Championship: new option for creating a completly custom championship.
 User can add any fight and therefore, any kind of tournament or league
 can be represented.
 More info in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Custom"

\end_inset

.
\end_layout

\begin_layout Description
Improved
\begin_inset space ~
\end_inset

network
\begin_inset space ~
\end_inset

communication: now using multiples computers for the same championship has
 been improved.
 Now is quicker than before!
\end_layout

\begin_layout Chapter
Basic mode
\end_layout

\begin_layout Standard
The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
basic mode
\end_layout

\end_inset

basic mode of the application allows the user to manage kendo leagues using
 only one 
\begin_inset Index idx
status open

\begin_layout Plain Layout
shiaijo
\end_layout

\end_inset

shiaijo.
 Only one computer is used for the league management, simplifying the use
 and installation of the application.
 
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
installation
\end_layout

\end_inset

Installation
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
requirements
\end_layout

\end_inset

Requirements
\end_layout

\begin_layout Standard
Kendo Tournament Manager Application (KTM) is 
\begin_inset Index idx
status open

\begin_layout Plain Layout
compatibility
\end_layout

\end_inset

compatible with all 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Windows
\end_layout

\end_inset

Windows platforms (2000, XP, Vista, Windows 7 y Windows 8) and with 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Linux
\end_layout

\end_inset

Linux Debian, Ubuntu, CentOS y Fedora.
 It is also possible that can run successfully in other operative systems
 but has not been tested yet.
 
\end_layout

\begin_layout Standard
The application has been developed in 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Java
\end_layout

\end_inset

Java and needs at least the version 7 of Java Virtual Machine.
 This version is almost available by default in any operative system, but
 it is recommended to use the official version of Java distributed by Oracle.
 It can be downloaded from 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.java.com/es/download/
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
For the basic mode of the application, all data is stored in a SQLite database,
 that is already included in the application.
 Therefore any additional software is not needed.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
installation
\end_layout

\end_inset

Installation
\end_layout

\begin_layout Standard
For 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Windows
\end_layout

\end_inset

Windows users, the application is distributed as the common Windows Installer.
 It is not very flexible, because the user cannot change many options.
 Nevertheless, this makes easier the installation because the user will
 accept everything that will appear in the screen.
 
\end_layout

\begin_layout Standard
For 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Linux
\end_layout

\end_inset

Linux users (Debian/Ubuntu), the application is distributed as a DEB package.
 Therefore a dpkg –i package.deb should be enough.
 For users of other distributions which do not have dpkg, I advise to download
 the SRC package and compile it in a Java compilator.
 
\end_layout

\begin_layout Standard
In all cases in which an installer is used, a shortcut will be generated
 in order to execute the application.
 
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
use
\end_layout

\end_inset

Using the application
\end_layout

\begin_layout Standard
The program is divided logically in four parts.
 
\end_layout

\begin_layout Enumerate
New entries or 
\begin_inset Index idx
status open

\begin_layout Plain Layout
data
\end_layout

\end_inset

data register.
 Before the league, you should put in the database all the participants,
 clubs, teams and other necessary data.
 Everything not included will not exist for the program.
 
\end_layout

\begin_layout Enumerate
League 
\begin_inset Index idx
status open

\begin_layout Plain Layout
design
\end_layout

\end_inset

design.
 First matches, league structure and other details should be decided beforehand.
 
\end_layout

\begin_layout Enumerate
League 
\begin_inset Index idx
status open

\begin_layout Plain Layout
scoreboard
\end_layout

\end_inset

scoreboard.
 A screen would be filled out with the different scores obtained in the
 league.
 The results will generate the different matches.
 
\end_layout

\begin_layout Enumerate
\begin_inset Index idx
status open

\begin_layout Plain Layout
charts
\end_layout

\end_inset

Charts.
 A set of statistics and league lists.
 For here you can extract the ranking, a list of results and much more.
 
\end_layout

\begin_layout Section
Inserting information
\end_layout

\begin_layout Standard
This includes how to store the information needed for the progress of the
 league: competitors, teams and clubs up to the league.
 Those boxes have a similar use and that is why this chapter includes all
 these features.
\end_layout

\begin_layout Subsection
Saving information
\end_layout

\begin_layout Standard
From version 1.0, any change is not saved 
\begin_inset Index idx
status open

\begin_layout Plain Layout
save
\end_layout

\end_inset

automatically into the database.
 User must explicit do this operation or activate the auto-save option of
 the application.
 
\end_layout

\begin_layout Standard
If there are still some unsaved data, the application will remember the
 user to store it, or data will be lost.
 Then, user must choose the 
\emph on
Save
\emph default
 option in the 
\emph on
Program
\emph default
 menu.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
insert
\end_layout

\end_inset

General Information
\end_layout

\begin_layout Standard
There are certain parts that should not change from one league to another.
 This is why they must be only included only one time.
 An example includes competitors: information about competitors (name, ID
 number, etc.) would never change, that is why only they only must be included
 in the database once.
 
\end_layout

\begin_layout Standard

\lang spanish
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\lang spanish
\begin_inset Graphics
	filename Images_EN/generalInfo.png
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout

\lang spanish
\begin_inset Caption

\begin_layout Plain Layout
Adding general information into the database.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/InsertarCompetidor.png
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Adding a new competitor.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Specific information for each 
\begin_inset Index idx
status open

\begin_layout Plain Layout
league
\end_layout

\end_inset

league
\end_layout

\begin_layout Standard
There is some data that is exclusively used for a league, and may appeared
 or not in others.
 For example, the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
team
\end_layout

\end_inset

teams: a team is only valid for a league, because the name of the team may
 appear in different leagues, but the order of its competitors may vary.
 This is why they must be created again for each of the leagues.
 Another example is the choice of competitors who will take part in a league
 and their roles, because with the pass of time, some of the competitors
 may retire or disappear in other versions of the same league.
\end_layout

\begin_layout Standard

\lang spanish
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\lang spanish
\begin_inset Graphics
	filename Images_EN/InfoLiga.png
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout

\lang spanish
\begin_inset Caption

\begin_layout Plain Layout
Specific information options for each league.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Roles
\end_layout

\begin_layout Standard
The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
role
\end_layout

\end_inset

role of a participant is what he does into the league.
 When inserting a new competitor, we store basic information such as the
 name or ID number, but it does not means that the participant fights is
 in a team of the league.
 There are different roles available into the league:
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
competitor
\end_layout

\end_inset

Competitor: a competitor is who will be a member of a team.
 Therefore, he will fights in the league to achieve the victory.
 Only competitors can be a member of a team.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
referee
\end_layout

\end_inset

Referee: the person who controls the fights development.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
organizer
\end_layout

\end_inset

Organizer: is the event authority.
 Knows what must to be done, understand the logistic of the event, and probably
 will be use this application.
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
volunteer
\end_layout

\end_inset

Volunteer: help to the organizer.
 Has a more basic knowledgement of the league, but still is important for
 the league development.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
kendo volunteer
\end_layout

\end_inset

Kendo
\begin_inset space ~
\end_inset

volunteer: is a mix of a volunteer and a competitor.
 Helps into the league and also can be in a team.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
seminar
\end_layout

\end_inset

seminar: can access to kendo lessons but cannot be in the competition.
 
\end_layout

\begin_layout Description
Others: other roles can be added to fit the league requirements.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/roles.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Adding a role.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The menu of the windows has the next options:
\end_layout

\begin_layout Description
Accreditation
\begin_inset CommandInset label
LatexCommand label
name "Accreditations"

\end_inset

: will generate the accreditation of the selected user.
 
\end_layout

\begin_layout Description
Import
\begin_inset CommandInset label
LatexCommand label
name "Import-roles"

\end_inset

: allows the copy of all roles from other championship.
 The roles copied will not overwrite any existing role or delete any previous
 one.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
search
\end_layout

\end_inset

Searching and modifying information
\end_layout

\begin_layout Standard
There exists the possibility to modify the data included previously (competitors
, clubs, leagues…) For this, you have to go to the suitable Insertion tab
 for the data we want to modify.
 When you are inside the new box, you should see a Search button.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Botón-buscar."

\end_inset

 there is an example of this button.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/BotonBuscar.png
	lyxscale 60
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Botón-buscar."

\end_inset

Search button.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Clicking on this button, a new window will appear where we can choose the
 search patterns.
 You can fill any of those patterns to do the search.
 In the case where two or more of them will be filled, the program will
 choose the pattern closer to the upper border of the screen.
 In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Búsqueda-de-competidores."

\end_inset

 appear an example of a Competitor Search window.
 In this one you can see two different section: (A) where you will put the
 data to look for, and (B) where the results of the search will appear.
 In the example of the figure, if we fill the first and last name, the program
 will search for the last name.
 You do not need to write the whole last name because the program looks
 for patterns.
 With only one letter you will see all the last name that includes that
 letter in any position of their last name.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/Buscador.png
	lyxscale 60
	width 40col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Búsqueda-de-competidores."

\end_inset

Competitors search.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The lower part of the window is the result list (B), which will present
 a list of the competitors who fulfil the pattern once the search has begun.
 Selecting one of them and click on the Select button will allow us to go
 back to the data entry window with all the fields of the chosen competitor,
 where we can modify them.
 
\end_layout

\begin_layout Subsection
Data shredding
\end_layout

\begin_layout Standard
Data shredding can be done in the Search window.
 Going back to the example of the previous section, to 
\begin_inset Index idx
status open

\begin_layout Plain Layout
erase
\end_layout

\end_inset

erase a competitor, we must look for him first and then select him in the
 result list (B).
 In this moment, you can click on 
\emph on
Erase
\emph default
 button and the competitor will be erased from the database.
 Take special caution with data dependency.
 For example, if you erase a league, you will erase all the matches related
 with that league.
 
\end_layout

\begin_layout Subsection
Example of a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
competitor
\end_layout

\end_inset

competitor insertion
\end_layout

\begin_layout Standard
When a future participant appears before the register desk, the steps you
 have to do in order to include him in the program are the following:
\end_layout

\begin_layout Enumerate
Asking the participant if he or she has been in another league before, in
 this case, their data will already exists in the program.
 
\end_layout

\begin_layout Enumerate
If not, you will have to introduce all his or her data.
 Follow the next steps:
\end_layout

\begin_deeper
\begin_layout Enumerate
Take a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
photography
\end_layout

\end_inset

photography with a webcam and a suitable software for it to store it later
 in an accessible carpet.
 
\end_layout

\begin_layout Enumerate
In the application (
\emph on
Insert
\emph default
, 
\emph on
Add
\emph default
 new participant), introduce all the data of the new participant: Name,
 ID Number, Photography, etc.
 
\end_layout

\begin_layout Enumerate
When you are finishing the data insertion, you have to define the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
role
\end_layout

\end_inset

role of each participant: competitor, referee, etc.
 
\end_layout

\end_deeper
\begin_layout Enumerate
If the participant already exists on the database, the next steps are advised
 to follow:
\end_layout

\begin_deeper
\begin_layout Enumerate
In the window (
\emph on
Insert
\emph default
, 
\emph on
Add
\emph default
 new participant), click on 
\begin_inset Index idx
status open

\begin_layout Plain Layout
search
\end_layout

\end_inset

search button.
 Search for the participant in order to check if all the data are correct,
 using ID number or name for that.
 
\end_layout

\begin_layout Enumerate
Include the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
role
\end_layout

\end_inset

role of the participant in order to use it in the actual league.
 
\end_layout

\end_deeper
\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
credentials
\end_layout

\end_inset

Accreditations / Credentials
\end_layout

\begin_layout Standard
The program allows to generate, with the previous data already inserted
 in the database, a list of accreditations/credentials.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/acreditacion.png
	height 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Accreditation.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The program will generate a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
PDF
\end_layout

\end_inset

PDF with the information of the participant, his or her involvement in the
 league and a photography in order to recognize him or her.
 This accreditation/credential must be printed (and preferably laminated)
 to give it to the participant.
 This accreditations/credentials may be useful to monitor who is inside
 the league, specially if there is a fee to pay.
 Also, it is useful to know if the entire participants are in their team.
 An important detail about the accreditation/credential system, is that
 the system will only print the accreditations/credentials that were NOT
 printed before, unless you choose to print all again.
 This means that you can print the accreditations/credentials as soon as
 new competitors are being introduced in the database, without worrying
 about the ones that are printed already.
 
\end_layout

\begin_layout Standard

\emph on
Note: In the image shown below, you can see the logo and the design used
 in the 6th Kendo Open of the Universidad de Valencia.
 Obviously, this should be changed in order to accommodate the event you
 are going to organize.
 For this, you must change the image located at the folder images/background.png
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
league
\end_layout

\end_inset

League System
\end_layout

\begin_layout Standard
Once you have included all the data of the league and created it, you can
 determine the different matches.
 There are many ways to determine the matches according to the type of league
 you need.
 For this, you only need to select the suitable option in the upper menu:
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
score
\end_layout

\end_inset

Scoring rules
\end_layout

\begin_layout Standard
In this window you can determine the different scoring rules, that is, how
 much will be worth winning a match or if the match ends in a tie.
 By default, the Japanese system exists, in which only the matches that
 have been won will be counted, and the tied matches will count as lost.
 Another option consists on the system that actually is being used in Europe:
 in the case that two teams had scored a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
draw
\end_layout

\end_inset

draw according to the matches they have won, the team that will pass will
 be the one with more draw combats, because it is considered more valuable
 a draw than a loss.
 Lastly, there is a system that allows to give a score to the matches that
 have been won or lost, to imitate other system such as the football one,
 a victory will be valued with three points and a draw will be valued with
 one point.
 Here the user can choose any scoring system that he or she prefers.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/ScoreChooser.png
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Scores.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
league
\end_layout

\end_inset

Simple league
\end_layout

\begin_layout Standard
A simple league 
\begin_inset Index idx
status open

\begin_layout Plain Layout
league, simple
\end_layout

\end_inset

 is a league where all teams fights one among each other.
 The winner will be the team with most won fights.
 
\end_layout

\begin_layout Standard
User can define any combination between different teams, or can use the
 pre-existent options to define all fights.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/LigaSimple.png
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Simple league.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Exists a button to create random fights.
 If it is clicked, a fight list will be generated.
 Each team will fight for two consecutive fights.
 As usual in kendo.
 
\end_layout

\begin_layout Standard
Other button has a similar behaviour, but the teams will be selected by
 alphabetic order (by team's name).
\end_layout

\begin_layout Standard
Fights will not be created until the button 
\emph on
Accept
\emph default
 will be pressed.
 Therefore, the user can do different tests to see the behaviour of the
 window.
 Once the 
\emph on
Accept
\emph default
 button is pressed, all previous fights will be 
\begin_inset Index idx
status open

\begin_layout Plain Layout
delete
\end_layout

\end_inset

deleted and the new one will be created.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
league, ring
\end_layout

\end_inset

Round-Robin Leagues or Ring Leagues
\end_layout

\begin_layout Standard
We call round-robin league or ring league is the one in which a team competes
 in a successive way with each other without resting.
 This way, each of the teams will fights against the other teams in a successive
 way, trying to distribute their strengths in different matches.
 Although is not an official league system, it is very useful in training
 and it is why is included in the program.
 For using this modality, it is recommended that the participants with more
 experience fight earlier, saying, being in higher positions in the list.
 In this window, the user only need to select the order in which the teams
 will enter the shiaijo and the program will calculate all the matches keeping
 that order.
 It stands out that number of matches obtained this way are equal to (teams*(tea
ms-1)/2), so it is only advisable to make this tournament with a reduced
 number of teams.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
championship
\end_layout

\end_inset

Championship
\end_layout

\begin_layout Standard
The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
designer
\end_layout

\end_inset

designer is a graphical interface that tries to make easier for the user
 the creation of a league.
 It is specially designed to understand what you are doing in any moment,
 when a championship is being created.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diseñador-de-ligas."

\end_inset

 shows an example of the designer.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/Diseñador.png
	lyxscale 70
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diseñador-de-ligas."

\end_inset

Championship designer.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the designer there are two different sections.
 One where you “draw” the structure of the league, and another in which
 all the teams that are not assigned to a league appeared and you can choose
 and add them to the league.
 
\end_layout

\begin_layout Standard
The 'number of winners' option 
\begin_inset Index idx
status open

\begin_layout Plain Layout
number of winners
\end_layout

\end_inset

 allows to define how many teams will pass to the second phase.
 An 
\begin_inset Index idx
status open

\begin_layout Plain Layout
arrow
\end_layout

\end_inset

arrow for each team will appear in the designer.
 Red arrows are for first team and green ones for the second team.
 
\end_layout

\begin_layout Subsubsection
Generating a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
championship
\end_layout

\end_inset

championship
\end_layout

\begin_layout Standard
To generate a championship, what you have to do is add as many 
\begin_inset Index idx
status open

\begin_layout Plain Layout
group
\end_layout

\end_inset

groups as you wish.
 In each of those groups we will be adding the teams to compete against
 them.
 To add a team in a group, you only have to choose the group and after that,
 you choose the team.
 Then, we click on 
\emph on
Add
\emph default
 button and then, the team will be inside the group.
 The team will disappear from the league because the same team cannot be
 in two different groups.
 You can modify ONLY the initial teams because the winners of those groups
 will pass to the next stage automatically.
\end_layout

\begin_layout Subsubsection
Modifying the inserted groups
\end_layout

\begin_layout Standard
Clicking twice in a group will open a window and allow to modify some options
 of that team, such as the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
shiaijo
\end_layout

\end_inset

shiaijo, the number of winners that will pass to the next round (if we are
 in championship mode) or the team order.
 If a group contains more than one winner, the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
arrow
\end_layout

\end_inset

arrows will change colours to be able to distinguish where any of the winners
 will pass on the next round.
 
\end_layout

\begin_layout Subsubsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
custom championship
\end_layout

\end_inset

custom championship
\end_layout

\begin_layout Standard
This option gives more freedom to the user.
 It allows choosing in which group the winner will be.
 You only need to choose a group of the first round and one of the second
 round.
 An arrow will appear pointing out that the action has been stored.
 You need to take into account that this program does not allow anomalous
 things like, for example, that more than two groups choose being in the
 same group in the next round, doing this, the program will erase any link
 that are not allowed.
 
\end_layout

\begin_layout Subsubsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
delete
\end_layout

\end_inset

Erasing a phase
\end_layout

\begin_layout Standard
This option allows to erase a round (a column of the “tree”) and all the
 matches that are on it.
 This way, you can go back in the championship if any mistake has been made.
 We need to emphasize on, if you erase a round of a league, you will erase
 the following rounds after that one.
 So, erasing the first round it is the same as erasing all round
\end_layout

\begin_layout Subsubsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
buttons
\end_layout

\end_inset

Buttons
\end_layout

\begin_layout Standard
Here is a brief explanation of the use of each buttons of this window.
 
\end_layout

\begin_layout Description
Add
\begin_inset space ~
\end_inset

Teams: add the chosen team to the selected group if it is still possible
 (if it is not full) 
\end_layout

\begin_layout Description
Erase
\begin_inset space ~
\end_inset

Teams: erase all teams of the selected group.
 
\end_layout

\begin_layout Description
Erase
\begin_inset space ~
\end_inset

Winners: erase from the selected group all links to the next round created
 before.
 This button will only be available in manual mode.
 
\end_layout

\begin_layout Description
Add
\begin_inset space ~
\end_inset

Group: add a group to the designer below the selected group.
 In this group you can include the different teams to compete between them.
 Also, a new group will be added to the next round if it is necessary.
 This will only be possible if there are teams available to fill it.
 
\end_layout

\begin_layout Description
Erase
\begin_inset space ~
\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
group
\end_layout

\end_inset

Group: erase the selected group releasing the teams included on it to be
 included on other groups.
 If it is necessary it will erase the groups of the next round.
 
\end_layout

\begin_layout Description
Erase
\begin_inset space ~
\end_inset

All: erase all groups, links and selected teams, allowing restarting.
 
\end_layout

\begin_layout Description
Generate
\begin_inset space ~
\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
matches
\end_layout

\end_inset

Matches: once over, if you push this button, all the desired matches will
 be generated.
 The window will close because it is no longer useful.
 The rest of the league will be automated.
 
\end_layout

\begin_layout Description
Close: close the window saving the design made and allow continuing it later.
 
\end_layout

\begin_layout Description
Number
\begin_inset space ~
\end_inset

of
\begin_inset space ~
\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
winners
\end_layout

\end_inset

Winners: In this option you can put the number of winners that will pass
 to the next round.
 If you put one, only the winner of that group will pass to the next round.
 If you put two, the first and second will pass to the next round, etc.
 
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Custom"

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
Custom
\end_layout

\end_inset

Custom
\end_layout

\begin_layout Standard
This option allows the creation of any kind of championship or league by
 the user.
 
\end_layout

\begin_layout Standard
With this option, the user can add any fight without restrictions.
 A pop-up window will ask the user for the new fight configuration: which
 team will face another one.
 The created fight will be added automatically to the Scoreboard (Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Marcador-de-la"

\end_inset

).
 Each time all fights are over, the pop-up window will appear again asking
 for a new fight to be added.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/Custom.png
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Custom league.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Anytime the team classification can be obtained using the correct option
 of the menu.
 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Marcador-de-la"

\end_inset

League 
\begin_inset Index idx
status open

\begin_layout Plain Layout
scoreboard
\end_layout

\end_inset

Scoreboard
\end_layout

\begin_layout Standard
This is the most important screen of the program because is the one who
 allows to take control of the different matches.
 In this screen, the user can include all the matches’ hits as soon as they
 occur in the match in a easy, quick and intuitive way.
 The program will store them in the database automatically.
 The category the program deals with is “SAN BON SHOBU”, meaning the best
 of three valid points as maximum within the time in an individual match.
 The team with more won matches will be the winner.
 If the number of won matches is the same, the team with more individual
 matches won will be the winner.
 If there is still a draw, the team with more valid points will be the winner.
 If there is still a draw, there will be a deciding match in whom a representati
ve of each team will compete, and the one who makes the first valid point
 will be the winner.
\end_layout

\begin_layout Standard
It is divided in three parts: control of the league, control of the matches
 and group of buttons.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/FightPanel.png
	lyxscale 50
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Scoreboard.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Control of the league
\end_layout

\begin_layout Standard
The upper part of the window shows all the data of the league.
 It can also show a banner or an ad if this window is shown in a projector.
 Also, it allows changing the league to choose the appropriate one and can
 also change the shiaijo.
 A window can only show the matches of a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
shiaijo
\end_layout

\end_inset

shiaijo in a certain moment, and if you have more than one computer, it
 is advisable the use of each one for a different shiaijo (and never more
 than one for shiaijo).
 
\end_layout

\begin_layout Subsection
Control of the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
matches
\end_layout

\end_inset

matches
\end_layout

\begin_layout Standard
Here is shown a list of the matches between the teams.
 This list will depend on the selected league, the selected 
\begin_inset Index idx
status open

\begin_layout Plain Layout
shiaijo
\end_layout

\end_inset

shiaijo and the matches previously defined with the league designer.
 Changing the shiaijo will also change the list, to show other groups of
 matches.
 The list of matches adapts to the screen resolution.
 That is, if the screen resolution is bigger, the more matches will appear
 on this list.
 Usually, it will appear two or three matches.
 In the screenshot given, only one match is shown, but can also show three:
\end_layout

\begin_layout Description
Previous
\begin_inset space ~
\end_inset

Match: with the previous score, it allows to the competitors to check their
 matches once they go out of the shiaijo.
 Also, the audience can see the previous score.
 In the screenshot shown this does not appear due to the low resolution
 of the used screen.
 
\end_layout

\begin_layout Description
Current
\begin_inset space ~
\end_inset

Match: it is marked with a black box.
 This is the most important because it is the only one who can be modified.
 In this match, you can include the score and misses just by selecting the
 proper box with the right button of the mouse.
 A menu will appear allowing to choose which hit has been done and the match
 will be updated automatically.
 
\end_layout

\begin_layout Description
Next
\begin_inset space ~
\end_inset

Match: a list with the name of the next competitors allows those to be ready
 for the next match.
 Doing this, a lot of time is saved and allows to the audience to see the
 course of the league.
 If the screen is big enough, more matches could appear on the screen.
 
\end_layout

\begin_layout Standard
Remember that you can only modify the current match.
 The rest of the matches are protected by the program.
 In each of the matches, the program will order the competitors according
 to the order given when the team is made up.
\end_layout

\begin_layout Subsubsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
score
\end_layout

\end_inset

Scoring menu
\end_layout

\begin_layout Standard
When a scoring or miss box is selected with the right button of the mouse,
 a small menu appears with all the option.
 Basically, it allows adding the different hits made in the match in order
 to be captured on paper.
 
\end_layout

\begin_layout Standard
The program is smart, so it fills the score by itself if any competitor
 gets two misses (hansoku) or avoids putting any score in the wrong box.
 
\end_layout

\begin_layout Subsubsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
draw
\end_layout

\end_inset

Draw menu
\end_layout

\begin_layout Standard
If you select with the right button of the screen the empty space between
 the two teams, a small menu will appear in order to allow you to choose
 a draw for that match.
 This option will draw a big cross between the two teams, so the user and
 audience will understand easily that the match was a draw.
 Anyway, when the score of the next match changes, the program will understand
 that the previous match has finished and will draw the cross automatically.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
button
\end_layout

\end_inset

Buttons
\end_layout

\begin_layout Standard
In the bottom part of the window appears a group of buttons that allows
 controlling the matches.
 
\end_layout

\begin_layout Description
Previous
\begin_inset space ~
\end_inset

Match: Allows going back to other matches to correct any possible mistake
 done.
 
\end_layout

\begin_layout Description
Next
\begin_inset space ~
\end_inset

Match: Ends the current match and it becomes the previous match.
 The next match could be modified for the introduction of the scores.
 To finish this match, wait until all matches of the different competitors
 are finished.
 This button also allows generating the different stages of the championship
 as the matches finish.
 Once all matches have finished (all matches from all the shiaijos) the
 program will generate automatically the next round.
 Therefore, remember always to finish all matches before changing the shiaijo.
 If you see that the program does not generate the matches of the next round,
 it is possible that you forgot to finish a combat from any other shiaijo.
 Also, when all matches of a group had finished, the program will show briefly
 the scoring of all teams that have taken part in that group.
 
\end_layout

\begin_layout Subsection
Menu
\end_layout

\begin_layout Standard
Options in the different upper menu.
 
\end_layout

\begin_layout Standard
In the 
\emph on
Windows
\emph default
 menu:
\end_layout

\begin_layout Description
Change
\begin_inset space ~
\end_inset

position
\begin_inset space ~
\end_inset

of
\begin_inset space ~
\end_inset

the
\begin_inset space ~
\end_inset

teams: it is hard to predict where a computer is in relation to the match.
 This option allows changing the side of the teams represented in the screen.
 This way, the teams that are on the left of the screen will change to the
 right and vice versa.
 By default, the program assumes that the computer will be in front of the
 main referee, but if this is not the case, you can change the position
 of the teams.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
colours
\end_layout

\end_inset

Change
\begin_inset space ~
\end_inset

position
\begin_inset space ~
\end_inset

of
\begin_inset space ~
\end_inset

the
\begin_inset space ~
\end_inset

colours: similar to the previous option, allows to exchange the colour of
 the teams.
 It has no effect to the matches, but allows the user to follow up the match.
 
\end_layout

\begin_layout Description
Exit: close the window.
 
\end_layout

\begin_layout Standard

\emph on
Options
\emph default
 menu:
\end_layout

\begin_layout Description
Change
\begin_inset space ~
\end_inset

the
\begin_inset space ~
\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
order
\end_layout

\end_inset

order
\begin_inset space ~
\end_inset

of
\begin_inset space ~
\end_inset

a
\begin_inset space ~
\end_inset

team: it is possible to change the team's member order.
 The changes will have effect in the next matches, therefore, only passing
 teams are allowed to change its member order.
 
\end_layout

\begin_layout Standard

\emph on
Show
\emph default
 menu:
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
tree
\end_layout

\end_inset

Tree: it shows a window in which the progression of the league can be seen
 (this option will only be available if the league is a championship), the
 teams whose pass to the next round and the defined matches.
 The rounds will be completed automatically once all the matches of the
 round had finished.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
score list
\end_layout

\end_inset

Score
\begin_inset space ~
\end_inset

list
\begin_inset space ~
\end_inset

(group): this option will show a list of the teams that are currently in
 a match.
 Showing the won and lost matches by teams and individually and the points
 made.
 Also, the teams are listed by scoring, meaning that the first on the list
 is the one with the highest score.
 
\end_layout

\begin_layout Description
Score
\begin_inset space ~
\end_inset

list
\begin_inset space ~
\end_inset

(global): this option is similar to the previous one, but will compare all
 teams of the league, not only the current ones.
 
\end_layout

\begin_layout Section
Graphics and lists
\end_layout

\begin_layout Standard
Apart from the handling of participants and league, the program also allows
 printing part of the data in order to improve the management of the league.
 
\end_layout

\begin_layout Subsection
Support lists for the organization
\end_layout

\begin_layout Standard
There is the possibility to make different lists with the information for
 print those and putting up along the building or around the shiaijo.
 All the lists generated a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
PDF
\end_layout

\end_inset

PDF file which you can use to check it or print it.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
accreditations
\end_layout

\end_inset

Accreditations/
\begin_inset Index idx
status open

\begin_layout Plain Layout
credentials
\end_layout

\end_inset

Credentials: This option allows generating a file with all the accreditations/cr
edentials of a championship, this way, they will be ready to print and hand
 over to the competitors.
 Four accreditations/credentials appear in a page.
 It is advisable to laminate them and hand over with a necklace or any other
 way in order to be able to be seen with a quick look.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
team
\end_layout

\end_inset

Team
\begin_inset space ~
\end_inset

list: A list with all the teams and members that participate in the league.
 This way, all competitors of that league and all the other teams can check
 if their data are correct.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
match
\end_layout

\end_inset

Match
\begin_inset space ~
\end_inset

list: A list with all the matches already defined in the league.
 This way, if there is no projector and you cannot see the scoreboard, at
 least you can check the order of matches in order to be ready for your
 turn.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
scoreboard
\end_layout

\end_inset

Scoreboard
\begin_inset space ~
\end_inset

list: Once a championship is finished (or any of its rounds) you can print
 a list with the score of each of the teams.
 This way, you made public the total score of a team and you can see which
 team will pass to the next round or which team is the winner.
 If the championship is a championship or an elimination league, the scoreboard
 will be unified according to each round of the league in order for any
 competitor of the league to check how the league is going.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
match
\end_layout

\end_inset

Match
\begin_inset space ~
\end_inset

summary: Creates a summary with all the matches including all the hits done
 by each of the competitors.
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
referee
\end_layout

\end_inset

Referee
\begin_inset space ~
\end_inset

list: A short list with the names of all the referees that take part in
 the competition.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
diploma
\end_layout

\end_inset

Diploma
\end_layout

\begin_layout Standard
A small diploma award for each of the competitors in the championship is
 given at the end of it.
 Obviously, you need to change the background design each year in order
 to avoid any confusion.
 Once printed, it only needs to be signed by any person responsible to give
 some validity, being a nice memento for all the competitors.
\end_layout

\begin_layout Standard
Knowing that the design can change, the program allows you to change the
 position of the name of the competitors to adapt them to the design.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/NombreDiploma.png
	lyxscale 50
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Nombre-Diploma"

\end_inset

Choosing the position of the names for the diploma.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Nombre-Diploma"

\end_inset

 we can see an example, in which the name on the diploma is chosen in the
 blank space on the diploma.
 The side slider allows changing the height where the name is going to appear,
 while a thin line indicates his approximated position according to the
 value modified in this slider.
 
\end_layout

\begin_layout Standard
In a side of the window, the user can choose witch roles will have a diploma.
 
\end_layout

\begin_layout Standard

\emph on
Note: only new diplomas will be printed if 
\begin_inset Quotes eld
\end_inset

print all
\begin_inset Quotes erd
\end_inset

 option is not selected.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
graphics
\end_layout

\end_inset

Graphics as conclusions of the league
\end_layout

\begin_layout Standard
You can generate different graphics for checking easily how the league has
 been going on and how the competitors have improved.
 Those graphics can also be obtained for a specific league or for all the
 leagues (general statistics).
 
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
hit
\end_layout

\end_inset

Hit
\begin_inset space ~
\end_inset

percentage: Those graphics represent which is the score percentage.
 That is, which percentage of Mens, Kotes and other hits are given or received.
 It can also be useful for a player to check his or her strong and weak
 points.
 For examples, if all the hits are given in a specific zone can show if
 the competitor has a weakness in his or her guard and has an uncovered
 zone in a part of the body of that competitor.
\end_layout

\begin_layout Description
\begin_inset Index idx
status open

\begin_layout Plain Layout
Ranking
\end_layout

\end_inset

Ranking: This is represented in a list in order of the competitors or teams
 score.
 It is shown separately the victories and points obtained.
 In case of a draw, it is shown in alphabetical order.
 If all the championships are shown, the competitors who had taken part
 in most championships will probably have more points.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/PercentageOfPerformedHits.png
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Percentage of hits given by a player.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
options
\end_layout

\end_inset

Options
\end_layout

\begin_layout Standard
Lastly, the program allows the user to configure some options for its use:
 
\end_layout

\begin_layout Description
Language: you can select the language in which the program will be displayed.
 
\end_layout

\begin_layout Description
Log: you can create a register with the program’s log.
 This way, a text file with all the actions that has been done with the
 program will be stored and you can have a monitoring of this program.
 
\end_layout

\begin_layout Description
Debug: you can see any errors of the program if there is any.
 This allows the user to have more information if any action could not be
 done due to a configuration or introduction error.
 For example, if the program cannot connect to the database.
 
\emph on
Note: to understand those errors, you may have some knowledge with Java
 programming.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
summary
\end_layout

\end_inset

Summary
\end_layout

\begin_layout Standard
For a quick reference guide, I repeat the main steps to make the program
 work correctly:
\end_layout

\begin_layout Enumerate
Connect to the database with the connection window when you execute the
 program.
 
\end_layout

\begin_layout Enumerate
Add all the clubs to the league.
 The representative will be added later.
 
\end_layout

\begin_layout Enumerate
Add all the competitors.
 
\end_layout

\begin_layout Enumerate
Once the competitors are in the database, you can add the representative
 to the clubs.
 
\end_layout

\begin_layout Enumerate
Add a new league.
 
\end_layout

\begin_layout Enumerate
Define the role of the competitors.
 Only the competitors who have an appointed role will be included in a league
 when the teams are created.
 
\end_layout

\begin_layout Enumerate
Create the different teams and add their members.
 
\end_layout

\begin_layout Enumerate
Choose which league you need and the matches between the teams.
 
\end_layout

\begin_layout Enumerate
Use the scoreboard for adding the results of the different matches.
 This window can be used with a projector for the audience and competitors.
 
\end_layout

\begin_layout Standard
Steps 1, 2, 3 and 4 will be done only once because they are common to different
 leagues.
 That is, you only need to fill the information about competitors only once
 and you can use that information again for future leagues.
 Steps 5, 6, 7, 8 and 9 must be repeated for each league.
 
\end_layout

\begin_layout Chapter
\begin_inset Index idx
status open

\begin_layout Plain Layout
advanced use
\end_layout

\end_inset

Advanced use
\end_layout

\begin_layout Standard
With the advanced use of the application, multiple users can use different
 computers to manage one championship.
 Therefore, can work together different computers running this application
 sharing the same database.
 This allows to use one computer per shiaijo.
 
\end_layout

\begin_layout Standard
For advanced use, only a MySQL database must be installed in one computer
 (called central computer).
 Other computers will connect to this computer to access data.
 A network must be used for the connection (usually a Wireless network).
 When running any KTM on each computer, the user must set the connection
 to the correct database using the central computer IP.
 
\end_layout

\begin_layout Standard
When the connection is established, in the Scoreboard any user can choose
 a different 
\begin_inset Index idx
status open

\begin_layout Plain Layout
shiaijo
\end_layout

\end_inset

shiaijo.
 
\end_layout

\begin_layout Standard
Using this mode, prevent data fragmentation in multiple database, and therefore,
 one computer can obtain the new matches of next phases.
 
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
requirements
\end_layout

\end_inset

Requirements
\end_layout

\begin_layout Standard
As commented before, the requirement for using the application in advanced
 mode, is to install a MySQL database.
 This is a database server used by our application.
 Same as the Java virtual machine, this one is completely free too (except
 the technical assistance).
 Can be downloaded here: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://dev.mysql.com/downloads/mysql/5.1.html
\end_layout

\end_inset

 The version used in our program is 5.1, so the same version or any subsequent
 must be enough to work.
 I advise to download some server maintenance application: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://dev.mysql.com/downloads/gui-tools/5.0.html
\end_layout

\end_inset

 With these applications you can make backups of your databases and avoid
 data loses, but they are not essential for the use of the KTM.
 These applications just need to be installed in a PC, the one who is going
 to save the data.
 Consult chapter 3 for more information.
 
\end_layout

\begin_layout Subsection
Installation of the database
\end_layout

\begin_layout Standard
Installing a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
MySQL
\end_layout

\end_inset

MySQL database is very easy.
 In 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Windows
\end_layout

\end_inset

Windows there is a Graphical User Interface for this scope, and in 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Linux
\end_layout

\end_inset

Linux, the server can be found at the repository.
 
\end_layout

\begin_layout Standard
Once installed, some questions will be asked to the user.
 You can choose the default option in almost all of them.
 Some advices are:
\end_layout

\begin_layout Enumerate
Choosing the kind of server.
 I recommend to use the 
\begin_inset Quotes eld
\end_inset

Developer machine
\begin_inset Quotes erd
\end_inset

 option.
 
\end_layout

\begin_layout Enumerate
Database charset.
 I recommend to use 
\begin_inset Index idx
status open

\begin_layout Plain Layout
UTF-8
\end_layout

\end_inset

UTF-8, but it depends on the user language.
\end_layout

\begin_layout Enumerate
Uncheck 
\begin_inset Quotes eld
\end_inset

only local access
\begin_inset Quotes erd
\end_inset

 in the security options.
 Remember that we need that several computers use this database.
 
\end_layout

\begin_layout Enumerate
Remember the user password.
 Will be asked for connecting to the database.
 Later you can create new users for each computer (more secure) or share
 the same user and password (less secure).
\end_layout

\begin_layout Standard
With this recommendations, all will be works correctly.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
installation
\end_layout

\end_inset

Installation of the database
\end_layout

\begin_layout Standard
From the version 0.9 of the program, the database is installed automatically
 in the MySQL server if this one is not installed yet.
 Anyway, if any problem appears, you could also install it manually.
 For this, use the program MySQL Admin and the file included in the “database”
 folder.
 Install it as it is a backup with the option MySQL Admin allows to.
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
connection
\end_layout

\end_inset

Connection to the database
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
requirements
\end_layout

\end_inset

Requirements
\end_layout

\begin_layout Standard
Now I assume that all computers are connected together using a network.
 This network (wireless probably) must be robust.
 If you are using a wireless network, avoid the use an Ad hoc network and
 use an access point to ensure some quality.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
connection
\end_layout

\end_inset

Connection
\end_layout

\begin_layout Standard
For accessing to other machine's database, you must choose the option 
\emph on
Program
\emph default
, 
\emph on
Database
\emph default
 in the applications menu.
 First of all, we need to disconnect from the SQLite database, that is the
 default one.
 And later, perform a new connection.
 
\end_layout

\begin_layout Standard
When creating a new connection, the program asks you for the data in order
 to connect to the database server (MySQL).
 This data are username, password, computer and database.
 The username and password are root and the one specified previously in
 the installation, or the one by default if it has been changed.
 
\end_layout

\begin_layout Standard
The computer will be localhost if the server is in the same computer (the
 typical situation in most of the cases), or the network address of the
 computer which contains the data.
 The database will be 'kendotournament' which is what identifies our database
 in relation to the other programs that may be using it.
 
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
exporting data
\end_layout

\end_inset

Exporting data from basic mode to advanced one
\end_layout

\begin_layout Standard
If you have been working in the basic mode and need to switch to the advanced
 mode, and want to avoid to reinsert all data again in the new database,
 exists an option in 
\emph on
Program
\emph default
, 
\emph on
Database
\emph default
, 
\emph on
Convert to...

\emph default
 that export all data from one database to the other one.
 Therefore you can use all data in the new database as before.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/ConvertDB.png
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Exporting from SQLite to MySQL.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
You also can use this option to create some 
\begin_inset Index idx
status open

\begin_layout Plain Layout
backups
\end_layout

\end_inset

backups.
\end_layout

\begin_layout Section
Real case: 8th Open of Kendo of the Universidad de Valencia
\end_layout

\begin_layout Standard
Everything is easier to understand with an example, so here it is a diagram
 of the championship made in the city of Valencia in February 2011.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/Distribucion Open.png
	lyxscale 50
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagram of the 8th Open of kendo of the UV.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As you can see in the diagram, the championship consisted of two different
 tournaments distinguished by genre: male and female.
 Due to the participation, mostly of male competitors, on the championships,
 two shiaijos were dedicated to the male tournament.
 
\end_layout

\begin_layout Standard
Four laptops were used for managing this championship.
 One of those was in the coordination table, which was the host for the
 database and had a printer to print everything needed such as accreditations
 or the teams’ arrangements.
 The other three laptops were in each of the tables in each of the shiaijos.
 Those three laptops were in charge of taking account of the score in each
 of the matches.
 
\end_layout

\begin_layout Standard
Those laptops were connected among them with a wireless network, avoiding
 more wires around the place.
 For this, we used a common Wi-Fi router.
 Having four monitors to show the results was the first idea.
 
\end_layout

\begin_layout Standard
Three monitors in each of the shiaijos, showing the results of the current
 match to the referee and/or audience, and another monitor showing the current
 state of the league to the audience or the score of each of the shiaijos.
 In order to show those screens, there should be, at least, other four computers
 in monitor mode, or just connect them to the other laptops because they
 will show what is currently doing each of the computers.
 
\end_layout

\begin_layout Standard
When you execute KTM in each of the computers, the one of the coordination
 table will be the one with the database installed, so you must introduce
 this information: 
\end_layout

\begin_layout Standard
Server: localhost, user: kendo, password: *******.
 
\end_layout

\begin_layout Standard
The other three computers will have the same information, unless the server
 is the IP of the coordination computer.
 
\end_layout

\begin_layout Standard

\emph on
Note: fights must be saved before created to be seen by the others computes.
 Remember to save the fights when created.
 
\end_layout

\begin_layout Standard

\emph on
Note: A very important detail in those situations, specially if each of
 the laptops are working with just the battery, is avoiding that the coordinatio
n computers get in standby mode.
 If the computer gets in this mode, the Wi-Fi network will shut off, and
 therefore, the other three computers will not have access of the database,
 causing server access errors.
 Another reason that this connection error shows may be caused if a laptop
 auto-connects to another wireless network.
 Check this out carefully to avoid any undesired problem 
\end_layout

\begin_layout Chapter
\begin_inset Index idx
status open

\begin_layout Plain Layout
customization
\end_layout

\end_inset

Customization of the application
\end_layout

\begin_layout Standard
This application is distributed as free software and can be used by any
 kendo club without any cost.
 Also, if you have spare time you have total freedom to customize the applicatio
n to your liking.
 Specially, you can change the look and the text.
\end_layout

\begin_layout Section
Changing 
\begin_inset Index idx
status open

\begin_layout Plain Layout
images
\end_layout

\end_inset

images
\end_layout

\begin_layout Standard
All images can be changed.
 You only have to go the images folder of the program and change the contents
 but you must respect the name of the file.
 This way, the program will load your images instead of the originals.
 The image of the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
diploma
\end_layout

\end_inset

diploma in the diploma folder should be changed all years, changing text,
 date and name of the tournament at least.
 
\end_layout

\begin_layout Standard
Also, you will probably prefer to change the content of the background folder
 each year, because it is possible that someone uses an accreditation of
 other year.
 It is not easy to change the position of the letters or the pictures, so
 it is advisable that you use a design that does not seem conflicting with
 the rest of the design where the information is displayed.
 Some of the images are used as a background for some of the lists generated
 by the program.
 
\end_layout

\begin_layout Section
Adding a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
language
\end_layout

\end_inset

language
\end_layout

\begin_layout Standard
This program is ready for adding new languages or corrections for the ones
 that are already on the program.
 It has a folder called translations that contains all the information shown
 in the program.
 It is not encrypted or compiled, is just a simple text that you can modify.
 It is in XML format, but do not worry if you do not know what it is, because
 it is very easy to change.
 
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
\end_layout

\begin_layout Plain Layout
<translator> 
\end_layout

\begin_layout Plain Layout
<languages abbrev="en" >English</languages> 
\end_layout

\begin_layout Plain Layout
<languages abbrev="es" >Español</languages> 
\end_layout

\begin_layout Plain Layout
</translator>
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Fichero-languages.xml"

\end_inset

File languages.xml
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first thing to do is add the language.
 For this, you should modify the file included in the translations folder
 called languages.xml.
 The algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Fichero-languages.xml"

\end_inset

 shows its initial value.
 Basically, what you must do is add a new line under the one containing
 the word “Español” the same way and BEFORE the one that contains the code
 </translator>.
 Changing the name of the language that we want the program show and the
 content of “abbrev” with a code that connect with it.
 This code will be the one we use on the files for searching the languages.
 For example, if we want to add Italian to the program we should write:
 
\end_layout

\begin_layout Quotation
<languages abbrev="it" >Italiano</languages>
\end_layout

\begin_layout Standard
Remember to write the language in the proper language in order for the user
 to understand it and find it.
 Now you must change all the other files in the folder translations and
 modify its content.
 For example, in the file gui.xml we can see, what has been shown in the
 algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:newClub.xml"

\end_inset

.
 Even only a paragraph is shown, you should do the same with all them.
 
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status collapsed

\begin_layout Plain Layout
<AcceptButton> 
\end_layout

\begin_layout Plain Layout
<en>Accept</en> 
\end_layout

\begin_layout Plain Layout
<es>Aceptar</es> 
\end_layout

\begin_layout Plain Layout
</AcceptButton>
\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:newClub.xml"

\end_inset

Extracted from gui.xml
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Following the Italian example, we should add the following BEFORE the </AcceptBu
tton> because it is what indicates the end of the paragraph.
\end_layout

\begin_layout Standard
<it>Accettare</it>
\end_layout

\begin_layout Standard
Where 'it' is the abbreviation we marked on the file languages.xml This way,
 the program finds the suitable text for the selected language.
 It takes some time but is easy to do.
 
\end_layout

\begin_layout Standard
Of course, after all the translations if you want to share your work with
 other people you only need to send me the folder translations compressed
 with your contents to 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

softwaremagico@gmail.com
\end_layout

\end_inset

.
 I will include it in the next version of the program and also, you will
 be in the credits of the program thanking you for your work.
 
\end_layout

\begin_layout Section
Changing the design of the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
diploma
\end_layout

\end_inset

diploma
\end_layout

\begin_layout Standard
To generate a new diploma each year, you only need to modify the file that
 you can find in the folder diploma keeping its name and ending.
 The program will select this new image as a background for the next generated
 diploma.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images_EN/diploma_areas.png
	lyxscale 20
	width 60col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Distribución-diploma"

\end_inset

Distribution of a diploma.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Distribución-diploma"

\end_inset

 you can see the common distribution of a diploma, in which exists two different
 background areas, one that includes the name of the tournament and another
 one with a smaller font with the most important information of the diploma.
 The size of the areas could also be modified because the program can change
 the position of the name.
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
licences
\end_layout

\end_inset

Licences and extra
\end_layout

\begin_layout Standard
In the window “About…” is included among them, the licence of the program,
 gratitudes and another important things.
 I encourage all of you to customize the program for your club and even
 to modify it to make it better.
 The licence of the program is GNU and all this is allowed.
 Just maintain the name of the author (© Jorge Hortelano Otero) and the
 name of all the other people that has collaborated and even your own name
 if the change is meaningful.
 If you do not have technical ability to modify it, you can write me to
 point out everything that the program lacks or any errors.
 I will include all the information in future versions, as I am actually
 doing thanks to the e-mails of many users.
\end_layout

\begin_layout Chapter
FAQs
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
execution
\end_layout

\end_inset

Execution
\end_layout

\begin_layout Subsection
When I make click in the link of the program, this does nothing.
 What is happening? 
\end_layout

\begin_layout Standard
If you click on the program link and no window is shown, probably you have
 an obsolete Java version and you need to update it or you do not have installed
 the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Java
\end_layout

\end_inset

Java Virtual Machine.
 You can solve this installing the virtual machine.
 Is completely free and you can download it from:
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.java.com/es/download/
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Note: The Java machine that Windows has by default will not work properly
 with his program.
 
\end_layout

\begin_layout Subsection
When I click the button, this does nothing.
 Furthermore, the program does not allow me to do anything and I have to
 restart it.
\end_layout

\begin_layout Standard
This may has happened because when you click the button, an exception has
 occurred.
 This means that the program has crashed due to a bug.
 Although the program has been debugged constantly, there is always place
 for any unexpected bug.
 The best you can do in those situations is to execute the program from
 the Windows’ command console or 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Linux
\end_layout

\end_inset

Linux’s terminal.
 This way, you will have more information about what has happened.
 If this error repeats, you can send it to me by e-mail and I will try to
 solve it and avoid it will happen in future versions.
 
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
MySQL
\end_layout

\end_inset


\begin_inset Index idx
status open

\begin_layout Plain Layout
SQLite
\end_layout

\end_inset

Databases
\end_layout

\begin_layout Subsection
I have general problems with the database
\end_layout

\begin_layout Standard
This problem is quite vague, but I will throw some suggestions in order
 to solve this problem.
 
\end_layout

\begin_layout Enumerate
If you already have a previous version installed, you can also update the
 database.
 For doing this, you just need to choose the suitable option in the program.
 At the same time the program is improving, the complexity of the database
 is growing, because without those modifications the new functions of the
 application could not be used.
 If this does not solve the problem, try to erase the database and installing
 it again with an empty database of the program.
 
\end_layout

\begin_layout Enumerate
If the laptops are working only with their batteries, you should avoid that
 the main laptop gets in standby.
 If that is the case, the wireless network will be shut down and therefore,
 any other laptop will lose their connection with the database of the program,
 causing server access errors.
 This connection error may be caused if any of the laptops auto-connects
 to another wireless network.
 Check all the laptops to see if they are on and connected to desired wireless
 network.
 
\end_layout

\begin_layout Enumerate
Use KTM program from the command line.
 This will show more information about the problem and it will be easier
 to correct it.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
importing
\end_layout

\end_inset

Importing/
\begin_inset Index idx
status open

\begin_layout Plain Layout
exporting
\end_layout

\end_inset

Exporting Databases
\end_layout

\begin_layout Standard
If there is any problem importing a database, this can be caused by different
 causes: 
\end_layout

\begin_layout Enumerate
The file is from a previous version of the program and the database does
 not coincide.
 In this case, the best thing to do is installing the free program MySQL
 Workbench and checking what fields are incoherent in the new; although
 for this, some SQL knowledge is needed.
 
\end_layout

\begin_layout Enumerate
There is already data in the database that is trying to overwrite.
 Is there is any problem, it is important to empty the database before trying
 to import a new one.
 For this, MySQL Workbench can be used.
 
\end_layout

\begin_layout Enumerate
Since the version 0.95 of the program, those are not compatible with former
 databases.
 Therefore, you have to uninstall and reinstall the database.
 
\end_layout

\begin_layout Subsection
Which are the differences between SQLite and MySQL? Which should I use in
 my championship?
\end_layout

\begin_layout Standard
In general, MySQL is more powerful than SQLite and allows more possibilities.
 But, the installation is harder and the resources consumption higher.
 Then the decision will be conditioned by:
\end_layout

\begin_layout Enumerate
If you are using an old computer, or you do not want to expend so many resources
 in the application, use SQLite.
 
\end_layout

\begin_layout Enumerate
If you need more than one computer in your championship.
 Use MySQL.
 
\emph on
Note: Only one computer will need the MySQL server installed on it.
 
\end_layout

\begin_layout Enumerate
If you are using several thousands of registers (i.e.
 professional championship), use MySQL.
 
\end_layout

\begin_layout Enumerate
If you need to move the database from one computer to another one, SQLite
 is easier but MySQL also allows to do it with MySQL Workbench tool.
 
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"

\end_inset


\end_layout

\end_body
\end_document
